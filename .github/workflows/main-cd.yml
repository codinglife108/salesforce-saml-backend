name: Staging deployment

on:
  workflow_run:
    workflows: [ "Staging build check" ]
    branches: [ main ]
    types:
      - completed

jobs:
  build:
    name: Checkout and build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Git checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 18

      - name: Setup .npmrc
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.RELEASE_WORKFLOW_TOKEN }}" > ~/.npmrc

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        id: deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      # Creating .env file for build
      - name: Create .env file
        run: |
          touch .env
          echo SALESFORCE_ENTRY_POINT=${{ secrets.SALESFORCE_ENTRY_POINT }} >> .env
          echo APP_ISSUER=${{ secrets.APP_ISSUER }} >> .env
          echo SALESFORCE_LOGOUT=${{ secrets.SALESFORCE_LOGOUT }} >> .env
          echo CALLBACK_URL=${{ secrets.CALLBACK_URL }} >> .env
          echo FRONTEND_URL=${{ secrets.FRONTEND_URL }} >> .env
          echo SECRET=${{ secrets.SECRET }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo ROUTE_PATH=${{ secrets.ROUTE_PATH }} >> .env
          cat .env

      - name: upload env
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env
          retention-days: 1
  on-failure:
    name: Skip if staging build check workflow failed
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'Triggering workflow "Staging Build Check" failed'